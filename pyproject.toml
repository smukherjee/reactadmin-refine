[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "reactadmin-refine-backend"
version = "0.1.0"
description = "Enterprise FastAPI backend with modular architecture"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
keywords = ["fastapi", "backend", "api", "enterprise"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Framework :: FastAPI",
]

# Production dependencies
dependencies = [
    # Web framework and server
    "fastapi>=0.118.0",
    "uvicorn[standard]==0.37.0",
    
    # Database and ORM
    "SQLAlchemy==2.0.43",
    "psycopg>=3.2.0",         # PostgreSQL adapter for SQLAlchemy 2.0+
    "alembic>=1.16.0",        # Database migrations
    
    # Caching
    "redis==5.0.3",
    
    # Authentication and security
    "python-jose[cryptography]>=3.5.0",  # JWT tokens
    "passlib[bcrypt]>=1.7.4",           # Password hashing
    
    # Data validation and serialization
    "pydantic>=2.2.0",
    "email-validator>=2.0.0",    # Required for pydantic EmailStr
    
    # Configuration and environment
    "python-dotenv>=1.0.0",
    
    # System monitoring
    "psutil>=5.9.0",             # System and process monitoring
    
    # Type stubs for development
    "types-passlib>=1.7.7.0",
    "types-python-jose>=3.5.0.0",
]

# Development and testing dependencies
[project.optional-dependencies]
dev = [
    # Testing framework
    "pytest>=8.4.0",
    "httpx>=0.28.0",          # Required for FastAPI TestClient
    
    # Type checking and linting
    "mypy>=1.0.0",
    "pyright",                # Alternative type checker
    
    # Code formatting
    "black>=24.0.0",
    "isort>=5.12.0",
    
    # Security scanning
    "bandit>=1.7.0",
    
    # Development tools
    "pre-commit>=3.0.0",
]

# All dependencies for complete development environment
all = [
    "reactadmin-refine-backend[dev]",
]

[project.urls]
Homepage = "https://github.com/yourusername/reactadmin-refine"
Repository = "https://github.com/yourusername/reactadmin-refine.git"
Issues = "https://github.com/yourusername/reactadmin-refine/issues"

[project.scripts]
# Entry points for CLI commands
backend-server = "backend.main:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["backend*"]
exclude = ["tests*", "*.tests*"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--disable-warnings",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "redis.*",
    "uvicorn.*",
    "jose.*",
    "passlib.*",
]
ignore_missing_imports = true

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.mypy_cache
  | \.pytest_cache
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["backend"]

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101", "B601"]